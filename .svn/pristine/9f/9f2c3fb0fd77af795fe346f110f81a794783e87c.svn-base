/**
 * 
 */
package com.haaa.cloudmedical.app.equipment.service;

import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.haaa.cloudmedical.common.annotation.Log;
import com.haaa.cloudmedical.common.entity.InfoJson;
import com.haaa.cloudmedical.dao.equipment.BloodOxygenDao;
import com.haaa.cloudmedical.dao.equipment.BloodPressureDao;
import com.haaa.cloudmedical.dao.equipment.BloodSugarDao;
import com.haaa.cloudmedical.dao.equipment.EarThermometerDao;
import com.haaa.cloudmedical.dao.equipment.ElectrocardiographDao;
import com.haaa.cloudmedical.dao.equipment.LungCapacityDao;
import com.haaa.cloudmedical.dao.equipment.UrineTestDao;

/**
 * @author Bowen Fan
 *
 */
@Service
@Log(name="app7件套")
public class EquipmentAppService {
	
	@Resource
	private BloodOxygenDao bloodOxygenDao;
	
	@Resource
	private BloodPressureDao bloodPressureDao;
	
	@Resource
	private BloodSugarDao bloodSugarDao;
	
	@Resource
	private EarThermometerDao earThermometerDao;
	
	@Resource
	private ElectrocardiographDao electrocardiographDao;
	
	@Resource
	private LungCapacityDao lungCapacityDao;
	
	@Resource
	private UrineTestDao urineTestDao;
		
	public InfoJson getMostRecentAllData(String user_id){
		InfoJson infoJson = new InfoJson();
		DecimalFormat dformat = new DecimalFormat();
		Map<String, Object> result = new HashMap<String, Object>();
		Map<String, Object> bloodPressureMap = bloodPressureDao.getMostRecentData(user_id);
		Map<String, Object> bloodSugarMap = bloodSugarDao.getMostRecentData(user_id);
		Map<String, Object> electroacardiographMap = electrocardiographDao.getMostRecentData(user_id);
		Map<String, Object> bloodOxygenMap = bloodOxygenDao.getMostRecentData(user_id);
		Map<String, Object> lungCapacityMap = lungCapacityDao.getMostRecentData(user_id);
		Map<String, Object> urineTestMap = urineTestDao.getMostRecentData(user_id);
		if (bloodPressureMap!=null) {
			dformat.applyPattern("#");
			result.put("BloodPressure", bloodPressureMap);
			bloodPressureMap.put("HighPressure", dformat.format((Number)bloodPressureMap.get("HighPressure")));
			bloodPressureMap.put("LowPressure", dformat.format((Number)bloodPressureMap.get("LowPressure")));
			bloodPressureMap.put("PulseRate", dformat.format((Number)bloodPressureMap.get("PulseRate")));
		    bloodPressureMap.put("BloodPressureResult", "正常");
		}else{
			bloodPressureMap = new HashMap<String, Object>();
			result.put("BloodPressure", bloodPressureMap);
			bloodPressureMap.put("datetime", "");
			bloodPressureMap.put("HighPressure", "");
			bloodPressureMap.put("LowPressure", "");
			bloodPressureMap.put("PulseRate", "");
		    bloodPressureMap.put("BloodPressureResult", "");

		}
		if (bloodSugarMap!=null) {
			dformat.applyPattern("#.0");
			result.put("BloodSugar",bloodSugarMap);
			bloodSugarMap.put("BloodSugar",dformat.format((Number)bloodSugarMap.get("BloodSugar")));
			bloodSugarMap.put("BloodSugarResult", "正常");
		}else{	
			bloodSugarMap = new HashMap<String, Object>();
			result.put("BloodSugar",bloodSugarMap);
			bloodSugarMap.put("datetime", "");
			bloodSugarMap.put("BloodSugar", "");
			bloodSugarMap.put("BloodSugarResult", "");
		}
		if (electroacardiographMap!=null) {
			dformat.applyPattern("#");
			result.put("Electrocardiograph", electroacardiographMap);
			electroacardiographMap.put("HeartRate", dformat.format((Number)electroacardiographMap.get("HeartRate")));
		}else{
			electroacardiographMap = new HashMap<String, Object>();
			result.put("Electrocardiograph", electroacardiographMap);
			electroacardiographMap.put("datetime", "");
			electroacardiographMap.put("HeartRate", "");
		}
		if (bloodOxygenMap!=null) {
			dformat.applyPattern("#");
			result.put("BloodOxygen", bloodOxygenMap);
			bloodOxygenMap.put("Oxygen", dformat.format((Number)bloodOxygenMap.get("Oxygen")));
			bloodOxygenMap.put("PulseRate", dformat.format((Number)bloodOxygenMap.get("PulseRate")));
		}else{
			bloodOxygenMap = new HashMap<String, Object>();
			result.put("BloodOxygen", bloodOxygenMap);
			bloodOxygenMap.put("datetime", "");
			bloodOxygenMap.put("Oxygen", "");
			bloodOxygenMap.put("PulseRate", "");
		}
		if (lungCapacityMap!=null) {
			dformat.applyPattern("#.000");
			result.put("LungCapacity", lungCapacityMap);
			lungCapacityMap.put("fvc", dformat.format((Number)lungCapacityMap.get("fvc")));
			lungCapacityMap.put("fev1", dformat.format((Number)lungCapacityMap.get("fev1")));
			lungCapacityMap.put("pef", dformat.format((Number)lungCapacityMap.get("pef")));
			dformat.applyPattern("#");
			lungCapacityMap.put("fvc_rate", dformat.format((Number)lungCapacityMap.get("fvc_rate")));
			lungCapacityMap.put("fev1_rate", dformat.format((Number)lungCapacityMap.get("fev1_rate")));
			lungCapacityMap.put("pef_rate", dformat.format((Number)lungCapacityMap.get("pef_rate")));
		}else{
			lungCapacityMap = new HashMap<String, Object>();
			result.put("LungCapacity", lungCapacityMap);
			lungCapacityMap.put("datetime", "");
			lungCapacityMap.put("fvc", "");
			lungCapacityMap.put("fev1", "");
			lungCapacityMap.put("pef", "");
			lungCapacityMap.put("fvc_rate", "");
			lungCapacityMap.put("fev1_rate","");
			lungCapacityMap.put("pef_rate", "");
		}
		if (urineTestMap!=null) {
			result.put("UrineTest", urineTestMap);
			dformat.applyPattern("#.0");
			urineTestMap.put("PH",dformat.format((Number)urineTestMap.get("PH")));
			dformat.applyPattern("#.000");
			urineTestMap.put("SG",dformat.format((float)urineTestMap.get("SG")));
		}else {
			urineTestMap = new HashMap<String, Object>();
			result.put("UrineTest", urineTestMap);
			urineTestMap.put("datetime", "");
			urineTestMap.put("URO", "");
			urineTestMap.put("BLD", "");
			urineTestMap.put("BIL", "");
			urineTestMap.put("KET", "");
			urineTestMap.put("GLU", "");
			urineTestMap.put("PRO", "");
			urineTestMap.put("PH", "");
			urineTestMap.put("NIT", "");
			urineTestMap.put("LEU", "");
			urineTestMap.put("SG", "");
			urineTestMap.put("VC", "");
		}
		infoJson.setData(result);
		infoJson.setStatus(1);
		return infoJson;
	}

}
