package com.haaa.cloudmedical.common.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FilenameUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.time.DateFormatUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.haaa.cloudmedical.common.entity.Attachment;
import com.haaa.cloudmedical.common.service.FileUploadService;
import com.haaa.cloudmedical.common.util.LogPrinter;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.FileRenamePolicy;


@Controller
@RequestMapping("/upload")
public class FileUploadController {
	
	@Autowired
	private FileUploadService service;
	private String separator = "/";
	private String fileSizeLimit = "2000";
	private File oldFile;
	// private Attachment attachment;//附件

	class MyFileRenamePolicy implements FileRenamePolicy {
		public File rename(File file) {
			oldFile = file;
			String fileSaveName = StringUtils.join(new String[] { java.util.UUID.randomUUID().toString(), ".",
					FilenameUtils.getExtension(file.getName()) });
			File result = new File(file.getParentFile(), fileSaveName);
			return result;
		}
	}

	@RequestMapping("/file.action")
	public void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
		LogPrinter.info("--- BEGIN DOPOST ---");
		String user_id = request.getHeader("user_id");
		String order_id = request.getHeader("order_id");
		String report_type = request.getHeader("report_type");
		// 每天上传的文件根据日期存放在不同的文件夹
		String dateDir = DateFormatUtils.format(new Date(), "yyyy"+separator+"MM"+separator+"dd");
		String uploadDir = "upload"+separator+"image"+separator+user_id+separator+dateDir+separator+ report_type+separator;
		String uploadUrl = session.getServletContext().getRealPath(separator);
		if (!uploadUrl.endsWith(String.valueOf(separator))) {
			uploadUrl = uploadUrl + separator;
		}
		File savePath = new File(uploadUrl+uploadDir);
		if (!savePath.exists()) {
			savePath.mkdirs();
		}
		String saveDirectory = uploadUrl+uploadDir;
		
		if (StringUtils.isBlank(this.fileSizeLimit.toString())) {
			this.fileSizeLimit = "80";// 默认100M
		}
		int maxPostSize = Integer.parseInt(this.fileSizeLimit) * 1024 * 1024;
		String encoding = "UTF-8";
		FileRenamePolicy rename = new MyFileRenamePolicy();
		MultipartRequest multi = null;
		try {
			multi = new MultipartRequest(request, saveDirectory, maxPostSize, encoding, rename);
			if(oldFile!=null)
				LogPrinter.info("oldfilename:"+oldFile.getName());
		} catch (IOException e) {
			e.printStackTrace();
			return;
		}
		// 输出
		Enumeration<?> elements = multi.getFileNames();
		File file = null;
		String contentType = "";
		int num = 1;
		List<Attachment> TList = new ArrayList<Attachment>();
		Map<String,Object> TMap = new HashMap<String,Object>();
		while (elements.hasMoreElements()) {
			String name = (String) elements.nextElement();
			file = multi.getFile(name);
			if (file != null) {
				Attachment attachment = new Attachment();
				contentType = multi.getContentType(name);
				LogPrinter.info("newfilename:"+file.getName());
				LogPrinter.info("文件信息");
				LogPrinter.info("保存路径:" + uploadDir);

				attachment.setPic_num(num);
				attachment.setFile_name(file.getName());
				attachment.setFileLength(file.length());
				attachment.setDescription("这是上传的测试图片");
				attachment.setContentType(contentType);
				TList.add(attachment);
				
				num++;
			}
		}
		if(!TList.isEmpty()){
			TMap.put("uploadUrl", uploadUrl);
			TMap.put("uploadDir", uploadDir);
			TMap.put("report_type", report_type);
			TMap.put("order_id", order_id);
			TMap.put("user_id", user_id);
			TMap.put("file", TList);
		}
		LogPrinter.info("--- END DOPOST ---");
		if (TList.isEmpty()) {
			LogPrinter.error("没有要上传的文件：" + FileUploadController.class);
		}else if(response.getStatus()==200&&TList.size()>0)
			service.write(TMap);
	}
}
