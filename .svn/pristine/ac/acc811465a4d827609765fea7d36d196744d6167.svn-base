package com.haaa.cloudmedical.platform.healthRecords.contorller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.haaa.cloudmedical.common.entity.Page;
import com.haaa.cloudmedical.common.entity.ResponseDTO;
import com.haaa.cloudmedical.entity.CheckReport;
import com.haaa.cloudmedical.entity.ClinicReport;
import com.haaa.cloudmedical.entity.HospitalReport;
import com.haaa.cloudmedical.entity.InsuranceReport;
import com.haaa.cloudmedical.entity.User;
import com.haaa.cloudmedical.platform.healthRecords.service.HealthRecordService;
import com.haaa.cloudmedical.platform.healthRecords.service.HealthRecordsPlatformService;

@Controller
@RequestMapping("/health-record")
public class HealthRecordsPlatformController {
	
	@Autowired 
	private HealthRecordService service;
	
	@Autowired 
    private HealthRecordsPlatformService platService;
	
	@RequestMapping("/query.action")
    @ResponseBody
    public Object query(String user_id){
        Map<String,Object> map = platService.query(user_id);
        return map;
    }
	
	/*
	 * 获取用户指定时间或半年内的所有报告（包括一体机检查数据）
	 */
	@RequestMapping("/all.action")
	@ResponseBody
	public Object getReport(String user_id,String report_type,String start,String end){
		List<Map<String,Object>> list = service.getReport(user_id,report_type,start,end);
		return list;
	}
	
    /*
     * 分页数据
     */
    @RequestMapping("/pageData.action")
    @ResponseBody
    public Page queryPage(User user, Integer pageNo) {
        Page page = service.queryPage(user.getUser_name(), user.getUser_card(), user.getUser_phone(), pageNo);
        return page;
    }

    /**
     * 保存体检报告
     * @param model
     * @return
     */
    @RequestMapping("/saveCheck.action")
    @ResponseBody
    public Object saveCheck(CheckReport model) {
        ResponseDTO dto = new ResponseDTO();
        Long id = service.saveCheck(model);
        if (id != null) {
            dto.setFlag(true);
            dto.setData(id);
        } else {
            dto.setFlag(false);
            dto.setData(null);
        }
        return dto;
    }

    /**
     * 保存住院报告
     * @param model
     * @return
     */
    @RequestMapping("/saveHospital.action")
    @ResponseBody
    public Object saveHospital(HospitalReport model) {
        ResponseDTO dto = new ResponseDTO();
        Long id = service.saveHospital(model);
        if (id != null) {
            dto.setFlag(true);
            dto.setData(id);
        } else {
            dto.setFlag(false);
            dto.setData(null);
        }
        return dto;
    }

    /**
     * 保存门诊报告
     * @param model
     * @return
     */
    @RequestMapping("/saveClinic.action")
    @ResponseBody
    public Object saveClinic(ClinicReport model) {
        ResponseDTO dto = new ResponseDTO();
        Long id = service.saveClinic(model);
        if (id != null) {
            dto.setFlag(true);
            dto.setData(id);
        } else {
            dto.setFlag(false);
            dto.setData(null);
        }
        return dto;
    }

    /**
     * 保存医保记录
     * @param model
     * @return
     */
    @RequestMapping("/saveMedical.action")
    @ResponseBody
    public Object saveMedical(InsuranceReport model) {
        ResponseDTO dto = new ResponseDTO();
        Long id = service.saveMedical(model);
        if (id != null) {
            dto.setFlag(true);
            dto.setData(id);
        } else {
            dto.setFlag(false);
            dto.setData(null);
        }
        return dto;
    }

    /**
     * 详情
     * @param model
     * @return
     */
    @RequestMapping("/detail.action")
    @ResponseBody
    public Object detail(String user_id, String pic_type, String start, String end) {
        ResponseDTO dto = new ResponseDTO();
        List<Map<String, Object>> list = service.getReport(user_id, pic_type, start, end);
        dto.setFlag(true);
        dto.setData(list);
        return dto;
    }
    
    /**
     * 详情
     * @param model
     * @return
     */
    @RequestMapping("/getHosptialList.action")
    @ResponseBody
    public Object getHosptialList(String user_id, String pic_type, String start, String end) {
        return service.getHosptialList();
    }
    
    /**
     * 根据医院ID查询科室
     * @Description: 
     * @author 吴琪
     * @param hosp_order_id
     * @return 
     * @date: 2017年5月19日 下午5:57:38
     */
    @RequestMapping("/getDepartmentList.action")
    @ResponseBody
    public Object getDepartmentList(String hosp_order_id){
        return service.getDepartmentList(hosp_order_id);
    }
    
    @RequestMapping("/getDoctorList.action")
    @ResponseBody
    public Object getDoctorList(String department_order_id){
        return service.getDoctorList(department_order_id);
    }
    
}
