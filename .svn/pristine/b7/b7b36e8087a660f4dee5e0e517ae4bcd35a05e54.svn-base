package com.haaa.cloudmedical.platform.survey.service;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.haaa.cloudmedical.common.entity.InfoJson;
import com.haaa.cloudmedical.common.util.DateUtil;
import com.haaa.cloudmedical.common.util.IdcardInfoExtractor;
import com.haaa.cloudmedical.dao.MedicalSurveyDao;

/**
 * 
 * @author Bowen Fan
 *
 */
@Service
public class MedicalSurveyService {

	@Resource
	private MedicalSurveyDao medicalSurveyDao;

	/**
	 * 
	 * @Title: getPersonalInfo @Description: 后台健康调查填写页面查询用户信息 @param
	 *         user_id @return @throws
	 */
	public InfoJson getPersonalInfo(String user_id) {
		InfoJson infoJson = new InfoJson();
		Map<String, Object> userMap = medicalSurveyDao.getPersonalInfo(user_id);
		String idcard = (String) userMap.get("user_card");
		IdcardInfoExtractor idcardInfo = new IdcardInfoExtractor(idcard);
		userMap.put("user_birthday", DateUtil.dateFormat(idcardInfo.getBirthday(), "yyyy-MM-dd"));
		userMap.put("user_sex", idcardInfo.getGender());
		infoJson.setData(userMap);
		infoJson.setStatus(1);
		return infoJson;
	}

	/**
	 * @throws Exception
	 * 
	 * @Title: saveHealthSurvey @Description: 保存用户调查填写信息 @param
	 *         data @return @throws
	 */
	@Transactional
	public InfoJson saveHealthSurvey(Map<String, Object> data) {
		System.out.println(data);
		InfoJson infoJson = new InfoJson();
		Date date = new Date();
		long order_id = saveHealthSurveyHistory(data, date);
		Set<String> questionSet = data.keySet();
		for (String question_id : questionSet) {
			Object answer = data.get(question_id);
			if (answer!=null) {
				String question_index = "0";
				if (question_id.contains("-")) {
					String questionarr[] = question_id.split("-");
					question_id = questionarr[0];
					question_index = questionarr[1];
				}
				Map<String, Object> questionMap = medicalSurveyDao.getQuestionById(question_id);
				questionMap.put("question_index", question_index);
				questionMap.put("create_date", date);
				questionMap.put("question_k_order_id", questionMap.remove("order_id"));
				long question_order_id = medicalSurveyDao.addQuestion(questionMap);
				if (answer instanceof List) {
					List<Object> answerList = (List<Object>) answer;
					for (Object object : answerList) {
						Map<String, Object> answerMap = new HashMap<String, Object>();
						answerMap.put("medical_history_order_id", order_id);
						answerMap.put("question_order_id", question_order_id);
						answerMap.put("survey_answer", object);
						medicalSurveyDao.addAnswer(answerMap);
					}
				} else {
					Map<String, Object> answerMap = new HashMap<String, Object>();
					answerMap.put("medical_history_order_id", order_id);
					answerMap.put("question_order_id", question_order_id);
					answerMap.put("survey_answer", answer);
					medicalSurveyDao.addAnswer(answerMap);
				}
			}
		}
		infoJson.setData(order_id);
		infoJson.setStatus(1);
		return infoJson;
	}

	/**
	 * 
	 * @Title: saveHealthSurveyHistory @Description: 提取用户信息保存健康调查历史记录 @param
	 *         data @param date @return @throws
	 */
	private long saveHealthSurveyHistory(Map<String, Object> data, Date date) {
		Map<String, Object> survey_history = new HashMap<String, Object>();
		survey_history.put("user_id", data.remove("user_id"));
		survey_history.put("user_name", data.remove("user_name"));
		survey_history.put("fixed_telephone", data.remove("fixed_telephone"));
		survey_history.put("user_phone", data.remove("user_phone"));
		survey_history.put("user_marriage", data.remove("user_marriage"));
		survey_history.put("user_sex", data.remove("user_sex"));
		survey_history.put("user_address", data.remove("user_address"));
		survey_history.put("email", data.remove("email"));
		survey_history.put("language", data.remove("language"));
		survey_history.put("employment_status", data.remove("employment_status"));
		survey_history.put("user_height", data.remove("user_height"));
		survey_history.put("user_weight", data.remove("user_weight"));
		survey_history.put("HighPressure", data.remove("HighPressure"));
		survey_history.put("LowPressure", data.remove("LowPressure"));
		survey_history.put("PulseRate", data.remove("PulseRate"));
		survey_history.put("medical_insurance", data.remove("medical_insurance"));
		survey_history.put("medical_insurance_code", data.remove("medical_insurance_code"));
		survey_history.put("emergency_contact", data.remove("emergency_contact"));
		survey_history.put("emergency_contact_phone", data.remove("emergency_contact_phone"));
		survey_history.put("last_check", data.remove("last_check"));
		survey_history.put("create_date", date);
		return medicalSurveyDao.saveHealthHistory(survey_history);
	}
}
