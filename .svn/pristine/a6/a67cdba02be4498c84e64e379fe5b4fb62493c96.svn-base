package com.haaa.cloudmedical.platform.allinone.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.haaa.cloudmedical.common.entity.InfoJson;
import com.haaa.cloudmedical.common.util.DateUtil;
import com.haaa.cloudmedical.platform.allinone.service.AIOService;

@RestController
@RequestMapping("/aio")
public class AIOController {

	@Resource
	private AIOService service;

	private Logger logger = Logger.getLogger(AIOController.class);

	/*
	 * 9900身份认证，返回json数据
	 */
	@RequestMapping(value = { "/login.action" }, method = { RequestMethod.POST })
	public Map<String, Object> login(HttpServletRequest request) {
		System.out.println("------9900一体机登陆");
		Map<String, Object> responseMap = new HashMap<String, Object>();
		try {
			String requestXml = request.getParameter("requestXml");
			System.out.println(requestXml);
			responseMap = service.login(requestXml);
		} catch (Exception e) {
			logger.error("", e);
			responseMap.put("TimeStamp", DateUtil.dateFormat(new Date(), "yyyy-MM-dd HH:mm:ss"));
			responseMap.put("ResultCode", "9");
			responseMap.put("ResultMsg", "");
		}

		return responseMap;
	}

	/*
	 * 收取9900数据并返回json数据
	 */
	@RequestMapping(value = { "/saveData.action" }, method = { RequestMethod.POST })
	public Map<String, Object> saveData(HttpServletRequest request) {
		Map<String, Object> responseMap = new HashMap<String, Object>();
		try {
			String requestData = request.getParameter("requestData");
			System.out.println(requestData);
			responseMap = service.saveData(requestData);
		} catch (Exception e) {
			logger.error("", e);
			responseMap.put("TimeStamp", DateUtil.dateFormat(new Date(), "yyyy-MM-dd HH:mm:ss"));
			responseMap.put("ResultCode", "9");
			responseMap.put("ResultMsg", "");
		}

		return responseMap;
	}

	@RequestMapping(value = { "/getListByTime.action" })
	public InfoJson getTimeList(Long user_id, String upTime, String downTime) {
		InfoJson infoJson = new InfoJson();
		try {
			infoJson = service.getTimeList(user_id, upTime, downTime);
		} catch (Exception e) {
			logger.error("", e);
		}
		return infoJson;
	}

	/*
	 * 后台显示一体机查询数据
	 */
	@RequestMapping(value = { "/getDetail.action" }, method = { RequestMethod.GET })
	public InfoJson getDetail(Long user_id, Long order_id) {
		InfoJson infoJson = new InfoJson();
		try {
			infoJson = service.getDetail(user_id, order_id);
		} catch (Exception e) {
			logger.error("", e);
		}

		return infoJson;
	}
}
