package com.haaa.cloudmedical.dao;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.haaa.cloudmedical.common.dao.BaseTemplateDao;
import com.haaa.cloudmedical.common.entity.Constant;
import com.haaa.cloudmedical.common.service.PositionService;
import com.haaa.cloudmedical.common.util.BeanUtil;

@Repository
public class UserAppDao extends BaseTemplateDao {

	@Autowired
	private PositionService positionService;

	@SuppressWarnings("unchecked")
	public Map<String, Object> selectById(String user_id, String user_type) {
		String sql = "";
		Map<String, Object> map = null;
		String url = BeanUtil.getProperty("dbconfig").getString("pictureuploadhttp");
		if (user_type.equals(Constant.USER_TYPE_PATIENT)) {
			sql = "select a.user_id,a.user_type,a.user_is_vip,a.user_name,a.user_sex,a.user_age,a.user_birthday,a.user_card,a.user_height,a.user_weight,a.user_blood,a.user_medicare_card,a.user_marriage,a.user_address,"
					+ "a.user_phone,a.user_pwd,a.email,a.user_work,a.user_medical_burden,a.user_waist,a.picture_head_order_id,"
					+ "concat('"+url+"',a.user_head_pic_upload_index) user_head_pic_upload_index,concat('"+url+"',a.picture_card_front_order_id) picture_card_front_order_id,concat('"+url+"',a.user_card_front_upload_index) user_card_front_upload_index,"
					+ "a.picture_card_back_order_id,a.user_card_back_upload_index,date_format(a.create_date,'%Y-%m-%d %H:%i') create_date,date_format(a.update_date,'%Y-%m-%d %H:%i') update_date,a.user_source,"
					+ "a.user_flag,a.ahdi_value,b.doctor_id,date_format(now(), '%Y') sys_year from	n_user a left join d_patient b on a.user_id = b.patient_id where a.user_id = ? ";
			List<Map<String, Object>> list = select(sql, user_id);
			if (list.size() > 0) {
				map = list.get(0);
			} else {
				return map;
			}
			String doctor_name = "";
			try {
				Map<String, Object> doctor = (Map<String, Object>) positionService
						.getDoctorById(Long.parseLong(map.get("doctor_id").toString())).getData();
				doctor_name = doctor.get("doctor_name").toString();
			} catch (Exception e) {
				doctor_name = "";
			}
			map.put("doctor_name", doctor_name);
		} else if (user_type.equals(Constant.USER_TYPE_DOCTOR)) {
			sql = "select a.*,b.* from n_user a,d_doctor b where a.user_id = b.doctor_id and a.user_id = ?";
			List<Map<String, Object>> list = select(sql, user_id);
			if (list.size() > 0) {
				map = list.get(0);
			}
		}
		return map;
	}

	public Map<String, Object> selectByAccount(String user_phone, String user_pwd) {
		String url = BeanUtil.getProperty("dbconfig").getString("pictureuploadhttp");
		String sql = "select a.user_id,a.user_type,a.user_is_vip,a.user_name,a.user_sex,a.user_age,a.user_birthday,a.user_card,a.user_height,a.user_weight,a.user_blood,a.user_medicare_card,a.user_marriage,a.user_address,"
				+ "a.user_phone,a.user_pwd,a.email,a.user_work,a.user_medical_burden,a.user_waist,a.picture_head_order_id,"
				+ "concat('"+url+"',a.user_head_pic_upload_index) user_head_pic_upload_index,concat('"+url+"',a.picture_card_front_order_id) picture_card_front_order_id,concat('"+url+"',a.user_card_front_upload_index) user_card_front_upload_index,"
				+ "a.picture_card_back_order_id,a.user_card_back_upload_index,date_format(a.create_date,'%Y-%m-%d %H:%i') create_date,date_format(a.update_date,'%Y-%m-%d %H:%i') update_date,a.user_source,"
				+ "a.user_flag,a.ahdi_value,b.doctor_id,date_format(now(), '%Y') sys_year from	n_user a left join d_patient b on a.user_id = b.patient_id where a.user_phone = ? and a.user_pwd = ?";
		Map<String, Object> map = null;
		List<Map<String, Object>> list = select(sql, new Object[] { user_phone, user_pwd });
		if (list.size() > 0)
			map = list.get(0);
		return map;
	}

	public Map<String, Object> selectByIdCard(String identityCard) {
		String url = BeanUtil.getProperty("dbconfig").getString("pictureuploadhttp");
		String sql ="select a.user_id,a.user_type,a.user_is_vip,a.user_name,a.user_sex,a.user_age,a.user_birthday,a.user_card,a.user_height,a.user_weight,a.user_blood,a.user_medicare_card,a.user_marriage,a.user_address,"
				+ "a.user_phone,a.user_pwd,a.email,a.user_work,a.user_medical_burden,a.user_waist,a.picture_head_order_id,"
				+ "concat('"+url+"',a.user_head_pic_upload_index) user_head_pic_upload_index,concat('"+url+"',a.picture_card_front_order_id) picture_card_front_order_id,concat('"+url+"',a.user_card_front_upload_index) user_card_front_upload_index,"
				+ "a.picture_card_back_order_id,a.user_card_back_upload_index,date_format(a.create_date,'%Y-%m-%d %H:%i') create_date,date_format(a.update_date,'%Y-%m-%d %H:%i') update_date,a.user_source,"
				+ "a.user_flag,a.ahdi_value,b.doctor_id,date_format(now(), '%Y') sys_year from	n_user a left join d_patient b on a.user_id = b.patient_id where a.user_card= ? ";
		Map<String, Object> map = null;
		List<Map<String, Object>> list = select(sql, identityCard);
		if (list.size() > 0)
			map = list.get(0);
		return map;
	}

	public int count(String user_phone) {
		String sql = "select count(*) from n_user where user_phone = ?";
		int rows = this.jdbcTemplate.queryForObject(sql, new Object[] { user_phone }, Integer.class);
		return rows;
	}

	public int count(String sql, Object... args) {
		int size = this.jdbcTemplate.queryForObject(sql, args, Integer.class);
		return size;
	}

	public int query(String sql) {
		int result = this.jdbcTemplate.queryForObject(sql, Integer.class);
		return result;
	}

}
