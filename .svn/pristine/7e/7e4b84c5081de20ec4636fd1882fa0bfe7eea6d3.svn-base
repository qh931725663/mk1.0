package com.haaa.cloudmedical.platform.roleManage.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.haaa.cloudmedical.common.entity.Constant;
import com.haaa.cloudmedical.common.entity.InfoJson;
import com.haaa.cloudmedical.common.entity.Page;
import com.haaa.cloudmedical.entity.Role;
import com.haaa.cloudmedical.platform.roleManage.service.RoleManageService;

@RestController
@RequestMapping("/role")
public class RoleManageController {

    @Resource
    private RoleManageService service;

    private Logger            logger = Logger.getLogger(RoleManageController.class);

    /**
     * 查询分页
     * @param user
     * @param chronicManage
     * @param dto
     * @param pageno
     * @return
     */
    @RequestMapping("/gridQuery.action")
    @ResponseBody
    public Object gridQuery(Role model, Integer pageno, String datemin, String datemax) {
        if (pageno == null) {
            pageno = 1;
        }
        Page page = service.queryPage(model, pageno, datemin, datemax);
        return page;
    }

    /**
     *  获取菜单列表
     * @Description: 
     * @author 吴琪
     * @return 
     * @date: 2017年6月1日 下午5:16:44
     */
    @RequestMapping("/getMenuList.action")
    @ResponseBody
    public Object getMenuList() {
        return service.getMenuList();
    }

    /**
     * 添加角色菜单
     * @Description: 
     * @author 吴琪
     * @return 
     * @date: 2017年6月1日 下午5:16:44
     */
    @RequestMapping("/addRoleMenu.action")
    @ResponseBody
    public Object addRoleMenu(Role role) {
        return service.addRoleMenu(role);
    }
    /**
     * 角色菜单列表
     * @Description: 
     * @author 吴琪
     * @param role
     * @return 
     * @date: 2017年6月2日 上午9:10:14
     */
    @RequestMapping("/getRoleMenuList.action")
    @ResponseBody
    public Object getRoleMenuList(Role role) {
        return service.getRoleAndMenuList(role);
    }
    
    /**
     * 更新角色
     * @Description: 
     * @author 吴琪
     * @param role
     * @return 
     * @date: 2017年6月2日 下午2:17:02
     */
    @RequestMapping("/updateRole")
    @ResponseBody
    public Object updateRole(Role role){
        return service.updateRole(role);
    }
    
    /**
     * 删除角色
     * @Description: 
     * @author 吴琪
     * @return 
     * @date: 2017年6月2日 下午2:17:36
     */
    @RequestMapping("/deleteRole")
    @ResponseBody
    public Object deleteRole(Role role){
        InfoJson infoJson = new InfoJson();
        String ret = (String) service.deleteRoles(role);
        infoJson.setInfo(ret);
        return infoJson;
    }
    
    /**
     * 查询角色列表
     * @Description: 
     * @author 吴琪
     * @return 
     * @date: 2017年6月2日 下午5:09:27
     */
    @RequestMapping("/getRoleList")
    @ResponseBody
    public Object getRoleList(){
        return service.getRoleList();
    }
    
    @RequestMapping("/add.action")
    public InfoJson addRole(@RequestParam Map<String, Object> data) {
        InfoJson infoJson = new InfoJson();
        try {
            infoJson = service.addRole(data);
        } catch (Exception e) {
            logger.error("", e);
        }
        return infoJson;
    }

    @RequestMapping("/delete.action")
    public InfoJson deleteRole(String order_id) {
        InfoJson infoJson = new InfoJson();
        try {
            infoJson = service.deleteRole(order_id);
        } catch (Exception e) {
            logger.error("", e);
        }
        return infoJson;
    }

    @RequestMapping("/get.action")
    public InfoJson getRolesByCondition(String roleName, String authority, String downTime, String upTime, Integer pageno, Integer pagesize) {
        InfoJson infoJson = new InfoJson();
        try {
            if (pageno == null) {
                pageno = 1;
            }
            if (pagesize == null) {
                pagesize = Constant.DEFAULT_PAGESIZE;
            }
            infoJson = service.getRoleByCondition(roleName, authority, downTime, upTime, pageno, pagesize);
        } catch (Exception e) {
            logger.error("", e);
        }
        return infoJson;
    }

}
